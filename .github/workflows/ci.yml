# name: CI Pipeline

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
#   test:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout the code
#         uses: actions/checkout@v2

#       - name: Set up Python
#         uses: actions/setup-python@v2
#         with:
#           python-version: '3.10'
          
#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r requirements.txt
      
#       - name: Run tests
#         run: |
#           pytest --cov=app --cov-report=xml

#   sonarcloud:
#     name: SonarCloud
#     runs-on: ubuntu-latest
#     needs: test
#     steps:
#       - uses: actions/checkout@v3
#         with:
#         fetch-depth: 0
#       - name: SonarCloud Scan
#         uses: SonarSource/sonarcloud-github-action@master
#         env:
#         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          pytest --cov=app --cov-report=xml

jobs:
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: windows-latest  # Ensuring the runner is set to Windows
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adoptopenjdk'  # You can also use 'zulu' or other distributions

      - name: Run SonarCloud scan
        uses: SonarSource/sonarcloud-github-action@v1
        with:
          args: "-X"  # Enable full debug logging
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
